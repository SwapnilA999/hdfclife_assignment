name: CI/CD Pipeline for Node.js Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: #mention ur runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Lint Code
        run: npm run lint 

      - name: Quality Check with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=nodejs-app \
            -Dsonar.sources=. \
            -Dsonar.host.url= sonar-server-url \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build Docker Image
        env:
          AWS_REGION: us-west-2
          ECR_REPOSITORY: your-ecr-repo-name 
          IMAGE_TAG: ${{ github.sha }}  
        run: |
          echo "Logging into Amazon ECR"
          aws ecr login
          
          echo "Building the Docker image"
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          
          echo "Tagging the image for ECR"
          docker tag $ECR_REPOSITORY:$IMAGE_TAG <aws_account_id>.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          
          echo "Pushing the image to ECR"
          docker push <aws_account_id>.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          AWS_REGION: us-west-2
          CLUSTER_NAME: your-cluster-name 
          SERVICE_NAME: your-service-name 
        run: |
          echo "Updating ECS service..."
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION

